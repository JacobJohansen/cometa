version: '3.5'

services:
  db:
    container_name: cometa_postgres
    image: postgres:12.1
    volumes:
      - .:/code
      - ./db_data:/var/lib/postgresql/data
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
    expose:
      - "5532"
    networks:
     - testing
    restart: always

  django:
    container_name: cometa_django
    image: python:3.9
    logging:
      driver: json-file
    command: sh start.sh
    volumes:
      - /data/cometa/screenshots:/code/behave/screenshots
      - /data/cometa/videos:/code/behave/videos
      - .:/code
      - ./src:/opt/code:rw
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
      - "./crontabs/cometa_django_crontab:/etc/cron.d/crontab"
    working_dir: /opt/code
    environment:
      - PYTHONUNBUFFERED=1
      - ENVIRONMENT=DEV
    ports:
      - "8000:8000"
    depends_on:
      - db
    links:
      - behave:cometabehave.local
    networks:
     - testing
    restart: always

  behave:
    container_name: cometa_behave
    image: python:3.9
    logging:
      driver: json-file
    expose:
      - "8001"
    volumes:
      - /data/cometa/screenshots:/opt/code/screenshots
      - /data/cometa/videos:/opt/code/videos
      - ./behave:/opt/code:rw
      - .:/code
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
      - ./behave/schedules/crontab:/etc/cron.d/crontab
    command: "/code/behave/entry.sh"
    working_dir: /opt/code/behave_django
    environment:
      - PYTHONUNBUFFERED=1
      - ENVIRONMENT=DEV
    networks:
     - testing
    restart: always

  ws:
    container_name: cometa_socket
    image: node:14
    working_dir: /home/node/app
    logging:
      driver: json-file
    environment:
      - NODE_ENV=production
      - NPM_CONFIG_LOGLEVEL=info
    volumes:
      - ./ws-server:/home/node/app:rw
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
    ports:
      - "3001:3001"
    links:
      - behave
      - django
    command: "npm run-script start"
    networks:
     - testing
    restart: always

  selenoid:
    # Please use ./selenoid/deploy_selenoid.sh to create necessary files of Selenoid
    image: aerokube/selenoid:1.10.4
    container_name: cometa_selenoid
    logging:
      driver: json-file
    ports:
      - 4444:4444
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./selenoid/:/etc/selenoid/:ro
      - /data/cometa/videos:/opt/selenoid/video
    environment:
      - TZ=Europe/Berlin
      - OVERRIDE_VIDEO_OUTPUT_DIR=/data/cometa/videos
    networks:
      - testing
    restart: always
    command: ["-conf", "/etc/selenoid/browsers.json", "-video-output-dir", "/opt/selenoid/video", "-log-output-dir", "/opt/selenoid/logs", "-container-network", "cometa_testing"]

  apache:
    image: "httpd:latest"
    container_name: cometa_front
    volumes:
      - ./front:/code
      - ./front/apache-conf/httpd.conf:/usr/local/apache2/conf/httpd.conf
      - ./front/apache-conf/openidc.conf_local:/usr/local/apache2/conf/openidc.conf
      - ./front/apache-conf/paths.conf:/usr/local/apache2/conf/paths.conf
      - ./front/apache-conf/mod_auth_openidc.so:/usr/local/apache2/modules/mod_auth_openidc.so
      - ./front/crt/apache.key:/etc/ssl/certs/cometa.key
      - ./front/crt/apache.crt:/etc/ssl/certs/cometa.crt
      - /data/cometa/screenshots:/screenshots
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro

    working_dir: /code
    ports:
      - "80:80"
      - "443:443"
      - "4200:4200"
    command: bash /code/start.sh openidc basic angular compile
    networks:
      - testing
    restart: always


networks:
  testing:
    name: cometa_testing
    driver: "bridge"
